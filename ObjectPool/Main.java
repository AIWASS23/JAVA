/**********************************************************************************************
  * *Coment√°rios: "Object Pool"
  *********************************************************************************************
  * *Obs. Esse Projeto nos possibilita o 'reaproveitamento de objetos' basicamente, o que √© muito
  vanajoso quando os objetos s√£o caros para criar e s√£o necess√°rios apenas por curtos per√≠odos 
  de tempo. Um exemplo 'simple' que imaginei √© algo bem 'real' do nosso dia-a-dia, uma 'Pool'
  de objetos do tipo 'Funcion√°rios', isso pode ser algo que um sistema de cadastro ou de administra√ß√£o
  de uma empresa possa precissar na exclus√£o, modifica√ß√£o ou ingress√£o de novos trabalhadores, por
  exemplo, aqui fa√ßo um 'simples esbo√ßo' de umasitua√ß√£o que usa isso, mas bem no 'b√°sico' mesmo kkkk.
  *********************************************************************************************
  * * ("Object Pool") - Segundo a defini√ß√£o da Wikip√©dia: 
  * O padr√£o de 'pool de objetos' √© um padr√£o de design criacional de software que usa um conjunto 
  de objetos inicializados, prontos para uso - um "pool" - em vez de aloc√°-los e destru√≠-los sob 
  demanda. 
  *********************************************************************************************
	*/

class Main {

  public static void main(String[] args) {

    System.out.println(" ");
    System.out.println("---------------------------------------------------------------");
    System.out.println(" Object Pool ");
    System.out.println("---------------------------------------------------------------");
    System.out.println(" ");

    Pool<Funcionario> funcionarioPool = new FuncionarioPool();
		Funcionario funcionario = funcionarioPool.adquirir();
		
    System.out.println("*üë•  'Object Pool' dos funcion√°rios criados: ");
    System.out.println("---------------------------------------------------------------");

		while (funcionario != null) {
			System.out.println(funcionario.getNome());
			funcionario = funcionarioPool.adquirir();

		}

  }

}