/***********************************************************************************************
  * *Coment√°rios: "Delegation"
  *********************************************************************************************
  * *Obs. Esse Programa √© uma forma de 'delegar uma responsabilidade' para 'outro objeto pr√≥ximo'.
  √â onde o objeto expressa determinado comportamento para o exterior, deixando a responsabilidade 
  de determinado comportamento para outro objeto. √â um 'PP' bem comum, mas √© muitas vezes usado 
  por outros padr√µes, em 'conjunto', alguns desses PP's incluem: Visitor, Observer, Strategy, Event Listener e outros. Aqui mesmo, nossa classe 'delegadora' (ControllerImpressora) √© quem vai fazer
  essa 'delega√ß√£o' das classes 'delegadas' da classe 'Impressora', que s√£o as classes
  'ImpressoraHP', 'ImpressoraCanon' e 'ImpressoraEpson'.
  *********************************************************************************************
  * * ("Delegation") - Segundo a defini√ß√£o da Wikip√©dia: 
  * O padr√£o de delega√ß√£o √© um padr√£o de design orientado a objetos que permite a composi√ß√£o de objetos para obter a mesma reutiliza√ß√£o de c√≥digo como heran√ßa (Traduzido do ingl√™s). Nesse 'PP', um objeto lida com uma solicita√ß√£o delegando a um segundo objeto (o delegado ). O delegado √© um objeto auxiliar , mas com o contexto original .
  *(Obs. Mais info no link: https://en.wikipedia.org/wiki/Delegation_pattern).
  *********************************************************************************************
	*/

class Main {

  private static final String MENSAGEM_PRINTADA = "üíª : \"Hello world!\"";

  public static void main(String[] args) {

    System.out.println(" ");
    System.out.println("---------------------------------------------------------------");
    System.out.println(" Delegation ");
    System.out.println("---------------------------------------------------------------");
    System.out.println(" ");
    System.out.println("üëÆüì¢ ~ Delegando as impressoras para printar...");
    System.out.println(" ");

    var controllerImpressoraHP = new ControllerImpressora(new ImpressoraHP());
    var controllerImpressoraCanon = new ControllerImpressora(new ImpressoraCanon());
    var controllerImpressoraEpson = new ControllerImpressora(new ImpressoraEpson());

    controllerImpressoraHP.print(MENSAGEM_PRINTADA);
    controllerImpressoraCanon.print(MENSAGEM_PRINTADA);
    controllerImpressoraEpson.print(MENSAGEM_PRINTADA);

  }

}